# views.py



def blog_listpage(request,category_slug=None,tag_slug=None):
    # Default queryset: most recent blog post
    queryset = Post.objects.most_recent()

    #since am using one function for multiple roles, am using this to make 
    #the user know page he's on
    page_title = "Recent blog post "
    # Handle category_slug filter
    if category_slug:
        # Get the category object corresponding to the category_slug
        category = Category.objects.get(slug=category_slug)
        # Filter posts by categories using the __in lookup
        queryset = queryset.filter(categories__in=[category])
        page_title = f"Post list by Category : {category}"


    # Handle tag_slug filter
    if tag_slug:
        queryset = queryset.filter(tags__slug=tag_slug)
        page_title = f"Post tag by {tag_slug}"

    # Handle search_query filter
    search_query = request.GET.get('search_query')
    if search_query:
        queryset = queryset.filter(title__icontains=search_query) | queryset.filter(body__icontains=search_query)
        page_title = f"Post containing {search_query}"
    # Pagination
    paginator = Paginator(queryset, 10)  # Show 10 posts per page
    page = request.GET.get('page')
    try:
        posts = paginator.page(page)
    except PageNotAnInteger:
        posts = paginator.page(1)
    except EmptyPage:
        posts = paginator.page(paginator.num_pages)

    context = {
        'page_title': page_title,
        'most_recent_post': Post.objects.most_recent(),  # Display most recent post in sidebar
        'posts': posts,
    }
    return render(request, "blog/blog_listpage.html", context)







from django.core.paginator import Paginator
from .models import Shop

def shop_list(request):
    queryset = Shop.objects.all()
    paginator = Paginator(queryset, 10)  # Show 10 shops per page
    page = request.GET.get('page')
    shops = paginator.get_page(page)
    return render(request, "shop/shop_list.html", {'shops': shops})


<!-- shop/shop_list.html -->
{% extends "base.html" %}
{% block content %}
    <!-- Shop list -->
    <ul>
        {% for shop in shops %}
            <li>{{ shop.name }}</li>
            <!-- Other shop details... -->
        {% endfor %}
    </ul>

    <!-- Pagination -->
    {% include "pagination.html" with is_paginated=shops.has_other_pages page_obj=shops %}
{% endblock %}








#### pagination.html
{% if is_paginated %}
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            {% if page_obj.has_previous %}
                <li class="page-item">
                    <a class="page-link" href="?page=1" aria-label="First">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="?page={{ page_obj.previous_page_number }}" aria-label="Previous">
                        <span aria-hidden="true">&lsaquo;</span>
                    </a>
                </li>
            {% else %}
                <li class="page-item disabled">
                    <span class="page-link" aria-hidden="true">&laquo;</span>
                </li>
                <li class="page-item disabled">
                    <span class="page-link" aria-hidden="true">&lsaquo;</span>
                </li>
            {% endif %}

            {% for num in page_obj.paginator.page_range %}
                {% if page_obj.number == num %}
                    <li class="page-item active">
                        <span class="page-link">{{ num }}</span>
                    </li>
                {% elif num > page_obj.number|add:'-3' and num < page_obj.number|add:'3' %}
                    <li class="page-item">
                        <a class="page-link" href="?page={{ num }}">{{ num }}</a>
                    </li>
                {% endif %}
            {% endfor %}

            {% if page_obj.has_next %}
                <li class="page-item">
                    <a class="page-link" href="?page={{ page_obj.next_page_number }}" aria-label="Next">
                        <span aria-hidden="true">&rsaquo;</span>
                    </a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="?page={{ page_obj.paginator.num_pages }}" aria-label="Last">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            {% else %}
                <li class="page-item disabled">
                    <span class="page-link" aria-hidden="true">&rsaquo;</span>
                </li>
                <li class="page-item disabled">
                    <span class="page-link" aria-hidden="true">&raquo;</span>
                </li>
            {% endif %}
        </ul>
    </nav>
{% endif %}









<div id="load-more">
  {% if posts.has_next %}
    <div class="ui divider"></div>
    <button class="btn btn-primary" 
            hx-get="
                    {% if request.resolver_match.url_name == 'blog_list_recent' %}
                        {% url 'blog:blog_list_recent' %}
                    {% elif request.resolver_match.url_name == 'post_list_category' %}
                        {% url 'blog:post_list_category' category_slug=category_slug %}
                    {% elif request.resolver_match.url_name == 'post_list_tag' %}
                        {% url 'blog:post_list_tag' tag_slug=tag_slug %}
                    {% elif request.resolver_match.url_name == 'post_list_search' %}
                        {% url 'blog:post_list_search' %}
                    {% endif %}
                   "
            hx-vals='{"page": "{{ posts.next_page_number }}", "posts": "{{ posts }}"}' 
            hx-target="#load-more"
            hx-swap="outerHTML">
      Load more
    </button>
  {% endif %}
</div>
